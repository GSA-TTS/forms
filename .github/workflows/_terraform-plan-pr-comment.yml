name: Add Terraform CDK plan as comment on pull request

on:
  workflow_call:
    inputs:
      deploy-env:
        required: true
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: ${{ inputs.deploy-env }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read node version from `.nvmrc` file
        id: nvmrc
        shell: bash
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Install required node.js version
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvmrc.outputs.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: false

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.5"

      # - name: Get pnpm store directory
      #   id: pnpm-cache
      #   shell: bash
      #   run: |
      #     echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      # - uses: actions/cache@v4
      #   name: Setup pnpm cache
      #   with:
      #     path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install CloudFoundry CLI
        run: |
          curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v8&source=github" | sudo tar -zx --directory=/usr/local/bin
          cf --version

      - name: Configure CloudFoundry API endpoint
        run: |
          cf api https://api.fr.cloud.gov

      - name: Generate Terraform CDK provider constructs
        shell: bash
        run: pnpm --filter @gsa-tts/forms-infra-cdktf build:get

      - name: Build Terraform configuration
        shell: bash
        run: pnpm turbo run --filter @gsa-tts/forms-infra-cdktf build

      - name: Get Terraform stack name
        id: get_stack_name
        working-directory: infra/cdktf
        run: |
          DEPLOY_ENV=${DEPLOY_ENV} pnpm cdktf output --outputs-file outputs.json
          echo "stack_name=$(jq -r 'keys[0]' outputs.json)" >> $GITHUB_OUTPUT

      - name: Generate Terraform plan
        id: generate_terraform_plan
        working-directory: infra/cdktf/cdktf.out/stacks/${{ steps.get_stack_name.outputs.stack_name }}
        run: |
          terraform plan -out=tfplan -input=false
          terraform show -no-color tfplan | awk '
          {
              if (heredoc && $0 ~ /^[[:space:]]*EOT/) {
                  heredoc = 0;
                  print;
                  next;
              } else if (heredoc) {
                  print;
                  next;
              } else if ($0 ~ /EOT$/) {
                  heredoc = 1;
              }

              # Move Terraform diff markers (-, +, ~) to the beginning while preserving indentation
              if ($0 ~ /^[[:space:]]+[-+~]/) {
                  leading_ws = substr($0, 1, match($0, "[-+~]") - 1);  # Extract leading whitespace
                  op = substr($0, match($0, "[-+~]"), 1);             # Extract the first change symbol (-, +, ~)
                  rest = substr($0, match($0, "[-+~]") + 1);          # Extract the rest of the line after the symbol

                  print op leading_ws rest;  # Print with the marker moved to the beginning
                  next;
              }

              # Replace "~ " at the start with "!~ " to highlight modifications distinctly
              sub(/^[[:space:]]*~ /, "!~ ");

              # Ensure lines starting with "# (" keep their indentation properly
              if ($0 ~ /^[[:space:]]+# \(.*/) {
                  leading_ws = substr($0, 1, match($0, "#") - 1);  # Extract indentation
                  rest = substr($0, match($0, "#"));              # Extract the `# (hidden elements)`
                  print leading_ws rest;                          # Print correctly formatted line
                  next;
              }

              print;
          }' > tf-plan.txt
          echo "<details><summary>$(tail -n 1 tf-plan.txt)</summary>" > pr-comment.txt
          echo '' >> pr-comment.txt
          echo '```diff' >> pr-comment.txt
          cat tf-plan.txt >> pr-comment.txt
          echo '```' >> pr-comment.txt
          echo '</details>' >> pr-comment.txt

      - name: Add comment to PR with Terraform plan
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: terraform-plan
          path: infra/cdktf/cdktf.out/stacks/${{ steps.get_stack_name.outputs.stack_name }}/pr-comment.txt
